{"version":3,"sources":["header.js","footer.js","form.js","results.js","app.js","index.js"],"names":["Header","React","Component","Footer","superagent","require","Form","props","callAPI","e","a","preventDefault","url","state","URL","results","method","post","send","query","JSON","body","console","error","log","queryArray","target","value","split","queryObj","id","put","set","delete","get","resultString","stringify","localStorage","setItem","giveAPIresults","handleInput","setState","handleQuery","handleID","handleSubmit","newWords","words","handleRadio","headers","onSubmit","this","onChange","type","name","rows","Results","count","data-testid","src","App","updateState","apiResults","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.55187959.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nclass Header extends React.Component {\n    render(){\n      return(\n        <h1>RESTy</h1>\n      )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render(){\n    return(\n      <footer>by Stacy Burris, Tina Myers, Sara Strasner</footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './form.scss';\nconst superagent = require('superagent');\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      URL: '',\n      method: '',\n      words: '',\n      headers: '',\n      query: '',\n      id: '',\n    };\n  }\n  render() {\n    return (\n      <>\n        <form onSubmit={this.callAPI}>\n          <label>\n            URL:\n            <input onChange={this.handleInput} type=\"text\" name=\"URL\" />\n          </label>\n          <input type=\"submit\" value=\"Go!\" id=\"button\" />\n          <label>Search Query:</label>\n          <textarea\n            onChange={this.handleQuery}\n            type=\"text\"\n            rows=\"4\"\n            name=\"query\"\n          />\n          <div>\n            ID (for delete and update):\n            <input onChange={this.handleID} type=\"text\" name=\"id\" />\n          </div>\n          <div onChange={this.handleRadio}>\n            <input type=\"radio\" value=\"get\" name=\"request\" /> GET\n            <input type=\"radio\" value=\"post\" name=\"request\" /> POST\n            <input type=\"radio\" value=\"put\" name=\"request\" /> PUT\n            <input type=\"radio\" value=\"delete\" name=\"request\" /> DELETE\n          </div>\n        </form>\n      </>\n    );\n  }\n\n  callAPI = async e => {\n    e.preventDefault();\n    const url = this.state.URL;\n    let results = 'loading..';\n    if (this.state.method === 'post') {\n      try {\n        results = await superagent.post(url).send(this.state.query.JSON());\n        results = results.body;\n      } catch (e) {\n        console.error(e);\n      }\n    } else if (this.state.method === 'put') {\n      console.log(this.state);\n      let queryArray = e.target.query.value.split(':');\n      let queryObj = {};\n      queryObj[queryArray[0]] = queryArray[1];\n      console.log(`FRED: `, queryObj, e.target.id.value, url);\n      results = await superagent\n        .put(`${url}/${e.target.id.value}`)\n        .send(queryObj)\n        .set('Accept', 'application/json');\n      console.log(results);\n      results = results.body;\n    } else if (this.state.method === 'delete') {\n      results = await superagent.delete(`${url}/${this.state.id}`);\n    } else {\n      results = await superagent.get(url);\n      results = results.body;\n    }\n    if (results) {\n      // Store the URL, Method, and the Body (if any)\n      let resultString = JSON.stringify(results, this.state.method, this.state.url);\n      localStorage.setItem('successful results', resultString);\n    }\n    this.props.giveAPIresults(results);\n  };\n\n  handleInput = e => {\n    e.preventDefault();\n    this.setState({ URL: e.target.value });\n  };\n\n  handleQuery = e => {\n    e.preventDefault();\n    console.log(e.target.value);\n    this.setState({ query: e.target.value });\n  };\n\n  handleID = e => {\n    e.preventDefault();\n    this.setState({ id: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let newWords = this.state.words;\n    this.setState({ URL: newWords });\n  };\n\n  handleRadio = e => {\n    this.setState({ method: e.target.value });\n  };\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <>\n        {!this.props.headers ? '' : <div>Headers: {this.props.headers} </div>}\n        {!this.props.count ? '' : <div data-testid='count'>Count: {this.props.count}</div>}\n        {!this.props.results ? (\n          ''\n        ) : (\n          <div>\n            <ReactJson src={this.props.results} />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Results;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport Results from './results';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: '',\n      results: '',\n      headers: ''\n    };\n  }\n\n  updateState = (apiResults,headers={}) => {\n    // console.log('FRED IS IN THE APP', apiResults);\n    // this.setState({ headers });\n    this.setState({ results: apiResults });\n    // this.setState({ count: apiResults.count });\n  };\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form \n        giveAPIresults={this.updateState} \n        />\n        <Results\n          results={this.state.results}\n          count={this.state.count}\n          headers={this.state.headers}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}