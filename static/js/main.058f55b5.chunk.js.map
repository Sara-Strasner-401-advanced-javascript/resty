{"version":3,"sources":["header.js","footer.js","form.js","results.js","app.js","index.js"],"names":["Header","React","Component","Footer","superagent","require","Form","props","callAPI","e","a","preventDefault","url","state","URL","results","method","console","log","query","JSON","stringify","post","send","set","body","error","put","target","id","value","delete","get","resultString","localStorage","setItem","giveAPIresults","handleInput","setState","handleQuery","handleID","handleSubmit","newWords","words","handleRadio","headers","onSubmit","this","onChange","type","name","rows","Results","count","data-testid","src","App","updateState","apiResults","Main","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.058f55b5.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nclass Header extends React.Component {\n    render(){\n      return(\n        <h1>RESTy</h1>\n      )\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './footer.scss';\n\nclass Footer extends React.Component {\n  render(){\n    return(\n      <footer>by Stacy Burris, Tina Myers, Sara Strasner</footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport './form.scss';\nconst superagent = require('superagent');\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      URL: '',\n      method: '',\n      words: '',\n      headers: '',\n      query: '',\n      id: '',\n    };\n  }\n  render() {\n    return (\n      <>\n        <form onSubmit={this.callAPI}>\n          <label>\n            URL:\n            <input onChange={this.handleInput} type=\"text\" name=\"URL\" />\n          </label>\n          <input type=\"submit\" value=\"Go!\" id=\"button\" />\n          <label>Search Query:</label>\n          <textarea\n            onChange={this.handleQuery}\n            type=\"text\"\n            rows=\"4\"\n            name=\"query\"\n          />\n          <div>\n            ID (for delete and update):\n            <input onChange={this.handleID} type=\"text\" name=\"id\" />\n          </div>\n          <div onChange={this.handleRadio}>\n            <input type=\"radio\" value=\"get\" name=\"request\" /> GET\n            <input type=\"radio\" value=\"post\" name=\"request\" /> POST\n            <input type=\"radio\" value=\"put\" name=\"request\" /> PUT\n            <input type=\"radio\" value=\"delete\" name=\"request\" /> DELETE\n          </div>\n        </form>\n      </>\n    );\n  }\n\n  callAPI = async e => {\n    e.preventDefault();\n    const url = this.state.URL;\n    let results = 'loading..';\n    if (this.state.method === 'post') {\n      try {\n        console.log('query:', this.state.query);\n        console.log('Stringified query', JSON.stringify(this.state.query));\n        let stringJSON = JSON.stringify(this.state.query)\n        results = await superagent.post(url).send(this.state.query)\n        .set('content-type', 'application/json');\n        results = results.body;\n      } catch (e) {\n        console.error(e);\n      }\n    } else if (this.state.method === 'put') {\n      console.log(this.state);\n      results = await superagent\n        .put(`${url}/${e.target.id.value}`)\n        .send(e.target.query.value)\n        .set('Accept', 'application/json');\n      console.log(results);\n      results = results.body;\n    } else if (this.state.method === 'delete') {\n      results = await superagent.delete(`${url}/${this.state.id}`);\n    } else {\n      results = await superagent.get(url);\n      results = results.body;\n    }\n    if (results) {\n      // Store the URL, Method, and the Body (if any)\n      let resultString = JSON.stringify(results, this.state.method, this.state.url);\n      localStorage.setItem('successful results', resultString);\n    }\n    this.props.giveAPIresults(results);\n  };\n\n  handleInput = e => {\n    e.preventDefault();\n    this.setState({ URL: e.target.value });\n  };\n\n  handleQuery = e => {\n    e.preventDefault();\n    console.log('inside the handleQuery', e.target.value);\n    this.setState({ query: e.target.value });\n  };\n\n  handleID = e => {\n    e.preventDefault();\n    this.setState({ id: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let newWords = this.state.words;\n    this.setState({ URL: newWords });\n  };\n\n  handleRadio = e => {\n    this.setState({ method: e.target.value });\n  };\n}\n\nexport default Form;\n","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <>\n        {!this.props.headers ? '' : <div>Headers: {this.props.headers} </div>}\n        {!this.props.count ? '' : <div data-testid='count'>Count: {this.props.count}</div>}\n        {!this.props.results ? (\n          ''\n        ) : (\n          <div>\n            <ReactJson src={this.props.results} />\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Results;","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\nimport Form from './form';\nimport Results from './results';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: '',\n      results: '',\n      headers: ''\n    };\n  }\n\n  updateState = (apiResults,headers={}) => {\n    // console.log('FRED IS IN THE APP', apiResults);\n    // this.setState({ headers });\n    this.setState({ results: apiResults });\n    // this.setState({ count: apiResults.count });\n  };\n  render() {\n    return (\n      <div>\n        <Header />\n        <Form \n        giveAPIresults={this.updateState} \n        />\n        <Results\n          results={this.state.results}\n          count={this.state.count}\n          headers={this.state.headers}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}